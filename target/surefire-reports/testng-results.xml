<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="322" passed="300" failed="22" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-08T17:43:30 MSK" name="Surefire suite" finished-at="2023-11-08T17:50:20 MSK" duration-ms="409894">
    <groups>
    </groups>
    <test started-at="2023-11-08T17:43:30 MSK" name="Surefire test" finished-at="2023-11-08T17:50:20 MSK" duration-ms="409894">
      <class name="Test.TestPostRequest">
        <test-method signature="postNomenclatureChangeRequestMapIsEmptyObject()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:49:58 MSK" name="postNomenclatureChangeRequestMapIsEmptyObject" finished-at="2023-11-08T17:49:59 MSK" duration-ms="1043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapIsEmptyObject -->
        <test-method signature="postNomenclatureChangeRequestMapMaxPlusType3()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:49:59 MSK" name="postNomenclatureChangeRequestMapMaxPlusType3" finished-at="2023-11-08T17:50:00 MSK" duration-ms="1176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapMaxPlusType3 -->
        <test-method signature="postNomenclatureChangeRequestMapMaxType3()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:00 MSK" name="postNomenclatureChangeRequestMapMaxType3" finished-at="2023-11-08T17:50:05 MSK" duration-ms="4588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapMaxType3 -->
        <test-method signature="postNomenclatureChangeRequestMapMinType3()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:05 MSK" name="postNomenclatureChangeRequestMapMinType3" finished-at="2023-11-08T17:50:05 MSK" duration-ms="203" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1705)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
at Test.TestPostRequest.postNomenclatureChangeRequestMapMinType3(TestPostRequest.java:445)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapMinType3 -->
        <test-method signature="postNomenclatureChangeRequestMapType1()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:05 MSK" name="postNomenclatureChangeRequestMapType1" finished-at="2023-11-08T17:50:06 MSK" duration-ms="1000" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1705)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
at Test.TestPostRequest.postNomenclatureChangeRequestMapType1(TestPostRequest.java:175)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapType1 -->
        <test-method signature="postNomenclatureChangeRequestMapType1NotExist()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:06 MSK" name="postNomenclatureChangeRequestMapType1NotExist" finished-at="2023-11-08T17:50:07 MSK" duration-ms="1072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapType1NotExist -->
        <test-method signature="postNomenclatureChangeRequestMapType1_AbsentFields()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:07 MSK" name="postNomenclatureChangeRequestMapType1_AbsentFields" finished-at="2023-11-08T17:50:08 MSK" duration-ms="986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapType1_AbsentFields -->
        <test-method signature="postNomenclatureChangeRequestMapType1_ExtraRequiredFields()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:08 MSK" name="postNomenclatureChangeRequestMapType1_ExtraRequiredFields" finished-at="2023-11-08T17:50:09 MSK" duration-ms="955" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1705)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
at Test.TestPostRequest.postNomenclatureChangeRequestMapType1_ExtraRequiredFields(TestPostRequest.java:903)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapType1_ExtraRequiredFields -->
        <test-method signature="postNomenclatureChangeRequestMapType1_RequiredFields()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:09 MSK" name="postNomenclatureChangeRequestMapType1_RequiredFields" finished-at="2023-11-08T17:50:10 MSK" duration-ms="1014" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1705)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
at Test.TestPostRequest.postNomenclatureChangeRequestMapType1_RequiredFields(TestPostRequest.java:286)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapType1_RequiredFields -->
        <test-method signature="postNomenclatureChangeRequestMapType1_RequiredFieldsIsEmpty()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:10 MSK" name="postNomenclatureChangeRequestMapType1_RequiredFieldsIsEmpty" finished-at="2023-11-08T17:50:11 MSK" duration-ms="1000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapType1_RequiredFieldsIsEmpty -->
        <test-method signature="postNomenclatureChangeRequestMapType3()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:11 MSK" name="postNomenclatureChangeRequestMapType3" finished-at="2023-11-08T17:50:12 MSK" duration-ms="978" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1705)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
at Test.TestPostRequest.postNomenclatureChangeRequestMapType3(TestPostRequest.java:209)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapType3 -->
        <test-method signature="postNomenclatureChangeRequestMapType3AbsentFields()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:12 MSK" name="postNomenclatureChangeRequestMapType3AbsentFields" finished-at="2023-11-08T17:50:13 MSK" duration-ms="1102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapType3AbsentFields -->
        <test-method signature="postNomenclatureChangeRequestMapType3ExtraRequiredFields()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:13 MSK" name="postNomenclatureChangeRequestMapType3ExtraRequiredFields" finished-at="2023-11-08T17:50:14 MSK" duration-ms="936" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path guid doesn't match.
Expected: a CharSequence with length <36>
  Actual: null
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path guid doesn't match.
Expected: a CharSequence with length <36>
  Actual: null

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
at io.restassured.specification.ResponseSpecification$body$2.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at io.restassured.specification.ResponseSpecification$body$2.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at Test.TestPostRequest.postNomenclatureChangeRequestMapType3ExtraRequiredFields(TestPostRequest.java:940)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapType3ExtraRequiredFields -->
        <test-method signature="postNomenclatureChangeRequestMapType3NotExist()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:14 MSK" name="postNomenclatureChangeRequestMapType3NotExist" finished-at="2023-11-08T17:50:15 MSK" duration-ms="1074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapType3NotExist -->
        <test-method signature="postNomenclatureChangeRequestMapType3RequiredFields()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:15 MSK" name="postNomenclatureChangeRequestMapType3RequiredFields" finished-at="2023-11-08T17:50:16 MSK" duration-ms="884" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1705)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
at Test.TestPostRequest.postNomenclatureChangeRequestMapType3RequiredFields(TestPostRequest.java:319)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapType3RequiredFields -->
        <test-method signature="postNomenclatureChangeRequestMapType3RequiredFieldsIsEmpty()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:16 MSK" name="postNomenclatureChangeRequestMapType3RequiredFieldsIsEmpty" finished-at="2023-11-08T17:50:17 MSK" duration-ms="1005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMapType3RequiredFieldsIsEmpty -->
        <test-method signature="postNomenclatureChangeRequestMax()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:17 MSK" name="postNomenclatureChangeRequestMax" finished-at="2023-11-08T17:50:18 MSK" duration-ms="1178" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1705)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
at Test.TestPostRequest.postNomenclatureChangeRequestMax(TestPostRequest.java:540)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMax -->
        <test-method signature="postNomenclatureChangeRequestMaxPlus1Type1()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:18 MSK" name="postNomenclatureChangeRequestMaxPlus1Type1" finished-at="2023-11-08T17:50:19 MSK" duration-ms="836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMaxPlus1Type1 -->
        <test-method signature="postNomenclatureChangeRequestMinMapType1()[pri:0, instance:Test.TestPostRequest@535b1ae6]" started-at="2023-11-08T17:50:19 MSK" name="postNomenclatureChangeRequestMinMapType1" finished-at="2023-11-08T17:50:20 MSK" duration-ms="976" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1705)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)
at io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
at Test.TestPostRequest.postNomenclatureChangeRequestMinMapType1(TestPostRequest.java:411)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postNomenclatureChangeRequestMinMapType1 -->
      </class> <!-- Test.TestPostRequest -->
      <class name="AutoTest.ClassifireIsAllRussianTest">
        <test-method signature="getOkpdGuid()[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:45:56 MSK" name="getOkpdGuid" finished-at="2023-11-08T17:45:57 MSK" duration-ms="952" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdGuid -->
        <test-method signature="getOkpdGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:45:57 MSK" name="getOkpdGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:45:58 MSK" duration-ms="969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005026013b0c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdGuidNotExist -->
        <test-method signature="getOkpdGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:45:58 MSK" name="getOkpdGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:45:59 MSK" duration-ms="1035" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005056013b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdGuidNotExist -->
        <test-method signature="getOkpdGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:45:59 MSK" name="getOkpdGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:00 MSK" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[43dabce-3c42-11ee-b5b0-005096013b1c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdGuidNotExist -->
        <test-method signature="getOkpdGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:00 MSK" name="getOkpdGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:01 MSK" duration-ms="982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 13513a3e-36d6-11ee-b5b0-005056013b0c ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdGuidNotExist -->
        <test-method signature="getOkpdGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:01 MSK" name="getOkpdGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:02 MSK" duration-ms="990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-3 6d6-11ee-b5 b0-005056013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdGuidNotExist -->
        <test-method signature="getOkpdGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:02 MSK" name="getOkpdGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:03 MSK" duration-ms="1036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1кк13a3e-36d6-11ee-b5b0-00)&056 013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdGuidNotExist -->
        <test-method signature="getOkpdGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:03 MSK" name="getOkpdGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:04 MSK" duration-ms="970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdGuidNotExist -->
        <test-method signature="getOkpdGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:04 MSK" name="getOkpdGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:05 MSK" duration-ms="1002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdGuidNotExist -->
        <test-method signature="getOkpdGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:05 MSK" name="getOkpdGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:06 MSK" duration-ms="1026" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdGuidNotExist -->
        <test-method signature="getOkpdGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:06 MSK" name="getOkpdGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:07 MSK" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Q91MXkSBG2w4bDK9Z9nprYeT4Pd69TGUdDOqWKDrlSKkIZ3JHqi0rA1G5LAfCZ54yEJ3adXLSmgtm4Z5hXMNT3ZqxkqMyqQhE9fze353egOMYAf0tESKpQtqdOzmrqiyvTjC6tCVc6Iqxgyq3TkICV3Hhk7ffbIYkIYXqk6Inktqt9xKmNqCPsemWzKVaXCiQ299HurLBuVTvZeFWYrqnyjl46h1AKLjfkZOMb0vRari1MFJz48qkpFR6RLTTBS2EtLY1rAj7OIw6zACkXgsJkUkMShenn19tEeZKsl3nAwnt4Qk1P1nzHlnSw6Kdl1jvGflS6aLfxrRoqIM0W1TDlUfCfXehzCemTTui7BddecX6aUTcvYHj3eQSYb4tiErgIdN6PMpizjNO4iZjJLTdBh6xtQC9DQKCj1gM8QKUtDYP5sO1SlEcKcjPIC0Q3jQ4yY27NCuLwAiCqdqdiMVjGYsOd90xcdRBtX5tREE7ATqk21riVMXtAIHmBAGZ2jYQ6ZDO86ohend0RPlqMbjg1G3oliIwx5gNX1solpXlUnu1hmA1TgI3mB2qF1d7zgLw9yXykzScvCtOVsvqOAShLQ7GmR9cFJ7jfHN8APVBFMkXUKEVl6NkQhAQ4ApA7ehLXapgDI4JLuaNAWwlos9gEF2eS9VJ4j8F44fksKySH1IdSkcKR0fk9KX5pIxUQ7KWfWL6aALwY9hXvTtlHWBS62rAPT2VliYrbt9rCz8UVYGyxF9Dm43WvR6xrht8fFrOCVzhRvBreXHsyqwAE4Mzg7NMG48OXKLbo7ENp2bN7L1ppoLfF75wEDx5ecbTuFEg3YS4yDtKNdreHOei2bh1moaos3Zzum6WXZWHhrzFHtris4t8QZygCaNUTeaaONxRuFZtpz91ynjBF0gNFo5G0avIZHo0L5m5SYjXi41iVh8UOHAw2LxqpsVBaXDZ22nM2CWw1fmCgGsK1Jq6QDjEzul2GGZse3qwLxIokcqlVzKuGLrLJ2DDwhoWBovx2du]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdGuidNotExist -->
        <test-method signature="getOkpdList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:07 MSK" name="getOkpdList" data-provider="positiveData" finished-at="2023-11-08T17:46:08 MSK" duration-ms="1119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdList -->
        <test-method signature="getOkpdList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:08 MSK" name="getOkpdList" data-provider="positiveData" finished-at="2023-11-08T17:46:09 MSK" duration-ms="893" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdList -->
        <test-method signature="getOkpdList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:09 MSK" name="getOkpdList" data-provider="positiveData" finished-at="2023-11-08T17:46:10 MSK" duration-ms="1000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdList -->
        <test-method signature="getOkpdList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:10 MSK" name="getOkpdList" data-provider="positiveData" finished-at="2023-11-08T17:46:11 MSK" duration-ms="1262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdList -->
        <test-method signature="getOkpdList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:11 MSK" name="getOkpdList" data-provider="positiveData" finished-at="2023-11-08T17:46:12 MSK" duration-ms="1070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[199]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdList -->
        <test-method signature="getOkpdList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:12 MSK" name="getOkpdList" data-provider="positiveData" finished-at="2023-11-08T17:46:13 MSK" duration-ms="913" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdList -->
        <test-method signature="getOkpdListStepIsEmpty()[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:13 MSK" name="getOkpdListStepIsEmpty" finished-at="2023-11-08T17:46:14 MSK" duration-ms="1101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepIsEmpty -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:14 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:15 MSK" duration-ms="612" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:15 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:16 MSK" duration-ms="1001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:16 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:17 MSK" duration-ms="1059" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[   ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:17 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:18 MSK" duration-ms="950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 200 ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:18 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:19 MSK" duration-ms="1006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:19 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:20 MSK" duration-ms="982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:20 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:21 MSK" duration-ms="1080" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:21 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:22 MSK" duration-ms="997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent lupta]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:22 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:23 MSK" duration-ms="907" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123DWQ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:23 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:24 MSK" duration-ms="998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*(){}[]"':;/<>\|№
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:24 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:25 MSK" duration-ms="1008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[select*From users]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:25 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:26 MSK" duration-ms="991" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:26 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:27 MSK" duration-ms="992" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[<script>alert( 'Hello world' );</script>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkpdListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:27 MSK" name="getOkpdListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:28 MSK" duration-ms="1027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkpdListStepMaxPlus -->
        <test-method signature="getOkvedGuid()[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:28 MSK" name="getOkvedGuid" finished-at="2023-11-08T17:46:29 MSK" duration-ms="1005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedGuid -->
        <test-method signature="getOkvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:29 MSK" name="getOkvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:30 MSK" duration-ms="990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005026013b0c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedGuidNotExist -->
        <test-method signature="getOkvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:30 MSK" name="getOkvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:32 MSK" duration-ms="2017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005056013b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedGuidNotExist -->
        <test-method signature="getOkvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:32 MSK" name="getOkvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:33 MSK" duration-ms="1125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[43dabce-3c42-11ee-b5b0-005096013b1c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedGuidNotExist -->
        <test-method signature="getOkvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:33 MSK" name="getOkvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:34 MSK" duration-ms="861" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 13513a3e-36d6-11ee-b5b0-005056013b0c ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedGuidNotExist -->
        <test-method signature="getOkvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:34 MSK" name="getOkvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:35 MSK" duration-ms="990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-3 6d6-11ee-b5 b0-005056013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedGuidNotExist -->
        <test-method signature="getOkvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:35 MSK" name="getOkvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:36 MSK" duration-ms="1152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1кк13a3e-36d6-11ee-b5b0-00)&056 013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedGuidNotExist -->
        <test-method signature="getOkvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:36 MSK" name="getOkvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:37 MSK" duration-ms="849" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedGuidNotExist -->
        <test-method signature="getOkvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:37 MSK" name="getOkvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:38 MSK" duration-ms="998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedGuidNotExist -->
        <test-method signature="getOkvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:38 MSK" name="getOkvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:39 MSK" duration-ms="1106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedGuidNotExist -->
        <test-method signature="getOkvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:39 MSK" name="getOkvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:46:40 MSK" duration-ms="907" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Q91MXkSBG2w4bDK9Z9nprYeT4Pd69TGUdDOqWKDrlSKkIZ3JHqi0rA1G5LAfCZ54yEJ3adXLSmgtm4Z5hXMNT3ZqxkqMyqQhE9fze353egOMYAf0tESKpQtqdOzmrqiyvTjC6tCVc6Iqxgyq3TkICV3Hhk7ffbIYkIYXqk6Inktqt9xKmNqCPsemWzKVaXCiQ299HurLBuVTvZeFWYrqnyjl46h1AKLjfkZOMb0vRari1MFJz48qkpFR6RLTTBS2EtLY1rAj7OIw6zACkXgsJkUkMShenn19tEeZKsl3nAwnt4Qk1P1nzHlnSw6Kdl1jvGflS6aLfxrRoqIM0W1TDlUfCfXehzCemTTui7BddecX6aUTcvYHj3eQSYb4tiErgIdN6PMpizjNO4iZjJLTdBh6xtQC9DQKCj1gM8QKUtDYP5sO1SlEcKcjPIC0Q3jQ4yY27NCuLwAiCqdqdiMVjGYsOd90xcdRBtX5tREE7ATqk21riVMXtAIHmBAGZ2jYQ6ZDO86ohend0RPlqMbjg1G3oliIwx5gNX1solpXlUnu1hmA1TgI3mB2qF1d7zgLw9yXykzScvCtOVsvqOAShLQ7GmR9cFJ7jfHN8APVBFMkXUKEVl6NkQhAQ4ApA7ehLXapgDI4JLuaNAWwlos9gEF2eS9VJ4j8F44fksKySH1IdSkcKR0fk9KX5pIxUQ7KWfWL6aALwY9hXvTtlHWBS62rAPT2VliYrbt9rCz8UVYGyxF9Dm43WvR6xrht8fFrOCVzhRvBreXHsyqwAE4Mzg7NMG48OXKLbo7ENp2bN7L1ppoLfF75wEDx5ecbTuFEg3YS4yDtKNdreHOei2bh1moaos3Zzum6WXZWHhrzFHtris4t8QZygCaNUTeaaONxRuFZtpz91ynjBF0gNFo5G0avIZHo0L5m5SYjXi41iVh8UOHAw2LxqpsVBaXDZ22nM2CWw1fmCgGsK1Jq6QDjEzul2GGZse3qwLxIokcqlVzKuGLrLJ2DDwhoWBovx2du]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedGuidNotExist -->
        <test-method signature="getOkvedList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:40 MSK" name="getOkvedList" data-provider="positiveData" finished-at="2023-11-08T17:46:41 MSK" duration-ms="1046" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedList -->
        <test-method signature="getOkvedList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:41 MSK" name="getOkvedList" data-provider="positiveData" finished-at="2023-11-08T17:46:42 MSK" duration-ms="1004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedList -->
        <test-method signature="getOkvedList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:42 MSK" name="getOkvedList" data-provider="positiveData" finished-at="2023-11-08T17:46:43 MSK" duration-ms="937" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedList -->
        <test-method signature="getOkvedList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:43 MSK" name="getOkvedList" data-provider="positiveData" finished-at="2023-11-08T17:46:44 MSK" duration-ms="1244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedList -->
        <test-method signature="getOkvedList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:44 MSK" name="getOkvedList" data-provider="positiveData" finished-at="2023-11-08T17:46:45 MSK" duration-ms="1093" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[199]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedList -->
        <test-method signature="getOkvedList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:45 MSK" name="getOkvedList" data-provider="positiveData" finished-at="2023-11-08T17:46:46 MSK" duration-ms="1113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedList -->
        <test-method signature="getOkvedListStepIsEmpty()[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:46 MSK" name="getOkvedListStepIsEmpty" finished-at="2023-11-08T17:46:47 MSK" duration-ms="788" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepIsEmpty -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:47 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:48 MSK" duration-ms="747" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:48 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:49 MSK" duration-ms="974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:49 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:50 MSK" duration-ms="1016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[   ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:50 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:51 MSK" duration-ms="985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 200 ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:51 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:52 MSK" duration-ms="1050" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:52 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:53 MSK" duration-ms="948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:53 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:54 MSK" duration-ms="1002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:54 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:55 MSK" duration-ms="1188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent lupta]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:55 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:56 MSK" duration-ms="822" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123DWQ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:56 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:57 MSK" duration-ms="984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*(){}[]"':;/<>\|№
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:57 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:58 MSK" duration-ms="1126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[select*From users]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:58 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:46:59 MSK" duration-ms="874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:46:59 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:00 MSK" duration-ms="1007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[<script>alert( 'Hello world' );</script>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getOkvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:00 MSK" name="getOkvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:01 MSK" duration-ms="1180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOkvedListStepMaxPlus -->
        <test-method signature="getTnvedGuid()[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:01 MSK" name="getTnvedGuid" finished-at="2023-11-08T17:47:02 MSK" duration-ms="857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedGuid -->
        <test-method signature="getTnvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:02 MSK" name="getTnvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:47:03 MSK" duration-ms="950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005026013b0c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedGuidNotExist -->
        <test-method signature="getTnvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:03 MSK" name="getTnvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:47:04 MSK" duration-ms="1078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005056013b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedGuidNotExist -->
        <test-method signature="getTnvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:04 MSK" name="getTnvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:47:05 MSK" duration-ms="922" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[43dabce-3c42-11ee-b5b0-005096013b1c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedGuidNotExist -->
        <test-method signature="getTnvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:05 MSK" name="getTnvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:47:06 MSK" duration-ms="1008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 13513a3e-36d6-11ee-b5b0-005056013b0c ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedGuidNotExist -->
        <test-method signature="getTnvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:06 MSK" name="getTnvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:47:07 MSK" duration-ms="993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-3 6d6-11ee-b5 b0-005056013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedGuidNotExist -->
        <test-method signature="getTnvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:07 MSK" name="getTnvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:47:08 MSK" duration-ms="992" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1кк13a3e-36d6-11ee-b5b0-00)&056 013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedGuidNotExist -->
        <test-method signature="getTnvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:08 MSK" name="getTnvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:47:09 MSK" duration-ms="999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedGuidNotExist -->
        <test-method signature="getTnvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:09 MSK" name="getTnvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:47:10 MSK" duration-ms="1005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedGuidNotExist -->
        <test-method signature="getTnvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:10 MSK" name="getTnvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:47:11 MSK" duration-ms="1020" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedGuidNotExist -->
        <test-method signature="getTnvedGuidNotExist(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:11 MSK" name="getTnvedGuidNotExist" data-provider="guidNegative" finished-at="2023-11-08T17:47:12 MSK" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Q91MXkSBG2w4bDK9Z9nprYeT4Pd69TGUdDOqWKDrlSKkIZ3JHqi0rA1G5LAfCZ54yEJ3adXLSmgtm4Z5hXMNT3ZqxkqMyqQhE9fze353egOMYAf0tESKpQtqdOzmrqiyvTjC6tCVc6Iqxgyq3TkICV3Hhk7ffbIYkIYXqk6Inktqt9xKmNqCPsemWzKVaXCiQ299HurLBuVTvZeFWYrqnyjl46h1AKLjfkZOMb0vRari1MFJz48qkpFR6RLTTBS2EtLY1rAj7OIw6zACkXgsJkUkMShenn19tEeZKsl3nAwnt4Qk1P1nzHlnSw6Kdl1jvGflS6aLfxrRoqIM0W1TDlUfCfXehzCemTTui7BddecX6aUTcvYHj3eQSYb4tiErgIdN6PMpizjNO4iZjJLTdBh6xtQC9DQKCj1gM8QKUtDYP5sO1SlEcKcjPIC0Q3jQ4yY27NCuLwAiCqdqdiMVjGYsOd90xcdRBtX5tREE7ATqk21riVMXtAIHmBAGZ2jYQ6ZDO86ohend0RPlqMbjg1G3oliIwx5gNX1solpXlUnu1hmA1TgI3mB2qF1d7zgLw9yXykzScvCtOVsvqOAShLQ7GmR9cFJ7jfHN8APVBFMkXUKEVl6NkQhAQ4ApA7ehLXapgDI4JLuaNAWwlos9gEF2eS9VJ4j8F44fksKySH1IdSkcKR0fk9KX5pIxUQ7KWfWL6aALwY9hXvTtlHWBS62rAPT2VliYrbt9rCz8UVYGyxF9Dm43WvR6xrht8fFrOCVzhRvBreXHsyqwAE4Mzg7NMG48OXKLbo7ENp2bN7L1ppoLfF75wEDx5ecbTuFEg3YS4yDtKNdreHOei2bh1moaos3Zzum6WXZWHhrzFHtris4t8QZygCaNUTeaaONxRuFZtpz91ynjBF0gNFo5G0avIZHo0L5m5SYjXi41iVh8UOHAw2LxqpsVBaXDZ22nM2CWw1fmCgGsK1Jq6QDjEzul2GGZse3qwLxIokcqlVzKuGLrLJ2DDwhoWBovx2du]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedGuidNotExist -->
        <test-method signature="getTnvedList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:12 MSK" name="getTnvedList" data-provider="positiveData" finished-at="2023-11-08T17:47:13 MSK" duration-ms="1059" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedList -->
        <test-method signature="getTnvedList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:13 MSK" name="getTnvedList" data-provider="positiveData" finished-at="2023-11-08T17:47:14 MSK" duration-ms="1003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedList -->
        <test-method signature="getTnvedList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:14 MSK" name="getTnvedList" data-provider="positiveData" finished-at="2023-11-08T17:47:15 MSK" duration-ms="1012" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedList -->
        <test-method signature="getTnvedList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:15 MSK" name="getTnvedList" data-provider="positiveData" finished-at="2023-11-08T17:47:16 MSK" duration-ms="1330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedList -->
        <test-method signature="getTnvedList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:16 MSK" name="getTnvedList" data-provider="positiveData" finished-at="2023-11-08T17:47:17 MSK" duration-ms="1186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[199]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedList -->
        <test-method signature="getTnvedList(int)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:17 MSK" name="getTnvedList" data-provider="positiveData" finished-at="2023-11-08T17:47:18 MSK" duration-ms="897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedList -->
        <test-method signature="getTnvedListStepIsEmpty()[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:18 MSK" name="getTnvedListStepIsEmpty" finished-at="2023-11-08T17:47:19 MSK" duration-ms="933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepIsEmpty -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:19 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:20 MSK" duration-ms="710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:20 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:21 MSK" duration-ms="839" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:21 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:22 MSK" duration-ms="1019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[   ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:22 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:23 MSK" duration-ms="1157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 200 ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:23 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:24 MSK" duration-ms="846" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:24 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:25 MSK" duration-ms="1000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:25 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:26 MSK" duration-ms="1078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:26 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:27 MSK" duration-ms="923" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent lupta]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:27 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:28 MSK" duration-ms="1000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123DWQ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:28 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:29 MSK" duration-ms="1000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*(){}[]"':;/<>\|№
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:29 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:30 MSK" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[select*From users]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:30 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:31 MSK" duration-ms="990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:31 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:32 MSK" duration-ms="1007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[<script>alert( 'Hello world' );</script>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
        <test-method signature="getTnvedListStepMaxPlus(java.lang.Object)[pri:0, instance:AutoTest.ClassifireIsAllRussianTest@723877dd]" started-at="2023-11-08T17:47:32 MSK" name="getTnvedListStepMaxPlus" data-provider="negativeData" finished-at="2023-11-08T17:47:33 MSK" duration-ms="988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTnvedListStepMaxPlus -->
      </class> <!-- AutoTest.ClassifireIsAllRussianTest -->
      <class name="AutoTest.AuxiliaryTest">
        <test-method signature="getListOfChanges(java.lang.String,java.lang.Integer,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:44 MSK" name="getListOfChanges" data-provider="data" finished-at="2023-11-08T17:43:46 MSK" duration-ms="1675" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[nomenclature]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path size() doesn't match.
Expected: is <5>
  Actual: <0>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path size() doesn't match.
Expected: is <5>
  Actual: <0>

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
at io.restassured.specification.ResponseSpecification$body$2.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:212)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at AutoTest.AuxiliaryTest.getListOfChanges(AuxiliaryTest.java:109)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChanges -->
        <test-method signature="getListOfChanges(java.lang.String,java.lang.Integer,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:46 MSK" name="getListOfChanges" data-provider="data" finished-at="2023-11-08T17:43:46 MSK" duration-ms="357" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[basic-services]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path size() doesn't match.
Expected: is <1>
  Actual: <0>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path size() doesn't match.
Expected: is <1>
  Actual: <0>

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
at io.restassured.specification.ResponseSpecification$body$2.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at AutoTest.AuxiliaryTest.getListOfChanges(AuxiliaryTest.java:109)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChanges -->
        <test-method signature="getListOfChanges(java.lang.String,java.lang.Integer,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:46 MSK" name="getListOfChanges" data-provider="data" finished-at="2023-11-08T17:43:47 MSK" duration-ms="970" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[unified-classifier]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path size() doesn't match.
Expected: is <1>
  Actual: <0>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path size() doesn't match.
Expected: is <1>
  Actual: <0>

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
at io.restassured.specification.ResponseSpecification$body$2.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at AutoTest.AuxiliaryTest.getListOfChanges(AuxiliaryTest.java:109)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChanges -->
        <test-method signature="getListOfChanges(java.lang.String,java.lang.Integer,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:47 MSK" name="getListOfChanges" data-provider="data" finished-at="2023-11-08T17:43:48 MSK" duration-ms="1024" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[eop]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path size() doesn't match.
Expected: is <1>
  Actual: <0>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path size() doesn't match.
Expected: is <1>
  Actual: <0>

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
at io.restassured.specification.ResponseSpecification$body$2.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at AutoTest.AuxiliaryTest.getListOfChanges(AuxiliaryTest.java:109)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChanges -->
        <test-method signature="getListOfChanges(java.lang.String,java.lang.Integer,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:48 MSK" name="getListOfChanges" data-provider="data" finished-at="2023-11-08T17:43:49 MSK" duration-ms="989" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[units]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path size() doesn't match.
Expected: is <1>
  Actual: <0>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path size() doesn't match.
Expected: is <1>
  Actual: <0>

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
at io.restassured.specification.ResponseSpecification$body$2.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at AutoTest.AuxiliaryTest.getListOfChanges(AuxiliaryTest.java:109)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChanges -->
        <test-method signature="getListOfChanges(java.lang.String,java.lang.Integer,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:49 MSK" name="getListOfChanges" data-provider="data" finished-at="2023-11-08T17:43:50 MSK" duration-ms="1328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[okpd2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChanges -->
        <test-method signature="getListOfChanges(java.lang.String,java.lang.Integer,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:50 MSK" name="getListOfChanges" data-provider="data" finished-at="2023-11-08T17:43:51 MSK" duration-ms="674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[okved2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChanges -->
        <test-method signature="getListOfChanges(java.lang.String,java.lang.Integer,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:51 MSK" name="getListOfChanges" data-provider="data" finished-at="2023-11-08T17:43:52 MSK" duration-ms="1033" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tnved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChanges -->
        <test-method signature="getListOfChangesNegative(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:52 MSK" name="getListOfChangesNegative" data-provider="stepNegative" finished-at="2023-11-08T17:43:53 MSK" duration-ms="1108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nomenclature]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2017-07-21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegative -->
        <test-method signature="getListOfChangesNegative(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:53 MSK" name="getListOfChangesNegative" data-provider="stepNegative" finished-at="2023-11-08T17:43:54 MSK" duration-ms="824" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[basic-services]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2017-07-21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegative -->
        <test-method signature="getListOfChangesNegative(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:54 MSK" name="getListOfChangesNegative" data-provider="stepNegative" finished-at="2023-11-08T17:43:55 MSK" duration-ms="1019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[unified-classifier]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2017-07-21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegative -->
        <test-method signature="getListOfChangesNegative(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:55 MSK" name="getListOfChangesNegative" data-provider="stepNegative" finished-at="2023-11-08T17:43:56 MSK" duration-ms="1037" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eop]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2017-07-21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegative -->
        <test-method signature="getListOfChangesNegative(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:56 MSK" name="getListOfChangesNegative" data-provider="stepNegative" finished-at="2023-11-08T17:43:57 MSK" duration-ms="911" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[units]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2017-07-21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegative -->
        <test-method signature="getListOfChangesNegative(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:57 MSK" name="getListOfChangesNegative" data-provider="stepNegative" finished-at="2023-11-08T17:43:58 MSK" duration-ms="1034" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[okpd2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent lupta]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2017-07-21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegative -->
        <test-method signature="getListOfChangesNegative(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:58 MSK" name="getListOfChangesNegative" data-provider="stepNegative" finished-at="2023-11-08T17:43:59 MSK" duration-ms="1022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eop]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[!@#$%^&*(){}[]"':;/<>\|№
]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2017-07-21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegative -->
        <test-method signature="getListOfChangesNegative(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:43:59 MSK" name="getListOfChangesNegative" data-provider="stepNegative" finished-at="2023-11-08T17:44:00 MSK" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eop]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[select*from users]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2017-07-21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegative -->
        <test-method signature="getListOfChangesNegative(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:00 MSK" name="getListOfChangesNegative" data-provider="stepNegative" finished-at="2023-11-08T17:44:01 MSK" duration-ms="1004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[units]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2017-07-21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegative -->
        <test-method signature="getListOfChangesNegative(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:01 MSK" name="getListOfChangesNegative" data-provider="stepNegative" finished-at="2023-11-08T17:44:02 MSK" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tnved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<script>alert( 'Hello world' );</script>]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2017-07-21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegative -->
        <test-method signature="getListOfChangesNegativeDate(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:02 MSK" name="getListOfChangesNegativeDate" data-provider="dataNegativeDate" finished-at="2023-11-08T17:44:03 MSK" duration-ms="1047" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nomenclature]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20.03.20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeDate -->
        <test-method signature="getListOfChangesNegativeDate(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:03 MSK" name="getListOfChangesNegativeDate" data-provider="dataNegativeDate" finished-at="2023-11-08T17:44:04 MSK" duration-ms="959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[basic-services]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20 марта 2020 ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeDate -->
        <test-method signature="getListOfChangesNegativeDate(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:04 MSK" name="getListOfChangesNegativeDate" data-provider="dataNegativeDate" finished-at="2023-11-08T17:44:05 MSK" duration-ms="1026" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[unified-classifier]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20/02/19]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeDate -->
        <test-method signature="getListOfChangesNegativeDate(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:05 MSK" name="getListOfChangesNegativeDate" data-provider="dataNegativeDate" finished-at="2023-11-08T17:44:06 MSK" duration-ms="988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eop]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20/09/2023]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeDate -->
        <test-method signature="getListOfChangesNegativeDate(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:06 MSK" name="getListOfChangesNegativeDate" data-provider="dataNegativeDate" finished-at="2023-11-08T17:44:07 MSK" duration-ms="974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[units]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[00/00/00]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeDate -->
        <test-method signature="getListOfChangesNegativeDate(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:07 MSK" name="getListOfChangesNegativeDate" data-provider="dataNegativeDate" finished-at="2023-11-08T17:44:08 MSK" duration-ms="975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[okpd2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2017-07-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeDate -->
        <test-method signature="getListOfChangesNegativeDate(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:08 MSK" name="getListOfChangesNegativeDate" data-provider="dataNegativeDate" finished-at="2023-11-08T17:44:09 MSK" duration-ms="1051" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[okved2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2017-07-00]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeDate -->
        <test-method signature="getListOfChangesNegativeDate(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:09 MSK" name="getListOfChangesNegativeDate" data-provider="dataNegativeDate" finished-at="2023-11-08T17:44:10 MSK" duration-ms="978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tnved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2017-07-001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeDate -->
        <test-method signature="getListOfChangesNegativeDate(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:10 MSK" name="getListOfChangesNegativeDate" data-provider="dataNegativeDate" finished-at="2023-11-08T17:44:11 MSK" duration-ms="1011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tnved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20-07-2017]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeDate -->
        <test-method signature="getListOfChangesNegativeType(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:11 MSK" name="getListOfChangesNegativeType" data-provider="typeNegative" finished-at="2023-11-08T17:44:12 MSK" duration-ms="1131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nomenclatur]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeType -->
        <test-method signature="getListOfChangesNegativeType(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:12 MSK" name="getListOfChangesNegativeType" data-provider="typeNegative" finished-at="2023-11-08T17:44:13 MSK" duration-ms="881" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <404>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1705)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:172)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
at AutoTest.AuxiliaryTest.getListOfChangesNegativeType(AuxiliaryTest.java:160)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeType -->
        <test-method signature="getListOfChangesNegativeType(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:13 MSK" name="getListOfChangesNegativeType" data-provider="typeNegative" finished-at="2023-11-08T17:44:13 MSK" duration-ms="102" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <403>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <403>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1705)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:172)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
at AutoTest.AuxiliaryTest.getListOfChangesNegativeType(AuxiliaryTest.java:160)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeType -->
        <test-method signature="getListOfChangesNegativeType(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:13 MSK" name="getListOfChangesNegativeType" data-provider="typeNegative" finished-at="2023-11-08T17:44:14 MSK" duration-ms="900" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeType -->
        <test-method signature="getListOfChangesNegativeType(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:14 MSK" name="getListOfChangesNegativeType" data-provider="typeNegative" finished-at="2023-11-08T17:44:15 MSK" duration-ms="1130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeType -->
        <test-method signature="getListOfChangesNegativeType(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:15 MSK" name="getListOfChangesNegativeType" data-provider="typeNegative" finished-at="2023-11-08T17:44:16 MSK" duration-ms="856" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeType -->
        <test-method signature="getListOfChangesNegativeType(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:16 MSK" name="getListOfChangesNegativeType" data-provider="typeNegative" finished-at="2023-11-08T17:44:17 MSK" duration-ms="958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeType -->
        <test-method signature="getListOfChangesNegativeType(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:17 MSK" name="getListOfChangesNegativeType" data-provider="typeNegative" finished-at="2023-11-08T17:44:18 MSK" duration-ms="868" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[<script>alert( 'Hello world' );</script>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <404>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1705)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:172)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
at AutoTest.AuxiliaryTest.getListOfChangesNegativeType(AuxiliaryTest.java:160)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeType -->
        <test-method signature="getListOfChangesNegativeType(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:18 MSK" name="getListOfChangesNegativeType" data-provider="typeNegative" finished-at="2023-11-08T17:44:18 MSK" duration-ms="11" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*(){}[]':;/<>|№]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Path parameters were not correctly defined. Undefined path parameters are: .]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Path parameters were not correctly defined. Undefined path parameters are: .
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1277)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1161)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:146)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:172)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
at AutoTest.AuxiliaryTest.getListOfChangesNegativeType(AuxiliaryTest.java:160)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeType -->
        <test-method signature="getListOfChangesNegativeType(java.lang.Object,java.lang.Object,java.lang.String)[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:18 MSK" name="getListOfChangesNegativeType" data-provider="typeNegative" finished-at="2023-11-08T17:44:19 MSK" duration-ms="1150" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[select*from users]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfChangesNegativeType -->
        <test-method signature="getPing()[pri:0, instance:AutoTest.AuxiliaryTest@17b016ac]" started-at="2023-11-08T17:44:19 MSK" name="getPing" finished-at="2023-11-08T17:44:20 MSK" duration-ms="955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPing -->
      </class> <!-- AutoTest.AuxiliaryTest -->
      <class name="AutoTest.ApplicationTest">
        <test-method signature="getChangeRequestGuid()[pri:0, instance:AutoTest.ApplicationTest@3b42121d]" started-at="2023-11-08T17:43:30 MSK" name="getChangeRequestGuid" finished-at="2023-11-08T17:43:33 MSK" duration-ms="2900" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/code"}
    instance: {"pointer":"/data/code"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/codeEOP"}
    instance: {"pointer":"/data/codeEOP"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/codeUC"}
    instance: {"pointer":"/data/codeUC"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/image"}
    instance: {"pointer":"/data/image"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/material"}
    instance: {"pointer":"/data/material"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/name"}
    instance: {"pointer":"/data/name"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/nameFull"}
    instance: {"pointer":"/data/nameFull"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 36)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/referencePosition"}
    instance: {"pointer":"/data/referencePosition"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 36
error: instance value (0) not found in enum (possible values: [1,2,3,5])
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/seriality"}
    instance: {"pointer":"/data/seriality"}
    domain: "validation"
    keyword: "enum"
    value: 0
    enum: [1,2,3,5]
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/sortament"}
    instance: {"pointer":"/data/sortament"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/sortamentGOST"}
    instance: {"pointer":"/data/sortamentGOST"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1

  Actual: {
"guid": "31c9ca2a-b120-41f8-aa86-8cffb2627492",
"be": "",
"status": 5,
"code": "000000014",
"autor": {
"fio": "",
"email": ""
},
"responsible": {
"fio": "",
"email": ""
},
"date": "2023-07-25T15:22:04",
"periodExecution": "2023-07-25T15:28:04",
"comment": "",
"data": {
"guid": "00000000-0000-0000-0000-000000000000",
"code": "",
"name": "",
"comment": "",
"archive": false,
"dateOutputArchive": "0001-01-01T00:00:00",
"nameFull": "",
"namePurchasing": "",
"nameSale": "",
"baseUnit": "00000000-0000-0000-0000-000000000000",
"baseUnitCode": 0,
"materialGOST": "",
"tnved": "00000000-0000-0000-0000-000000000000",
"okved": "00000000-0000-0000-0000-000000000000",
"okpd2": "00000000-0000-0000-0000-000000000000",
"classifierEOP": "00000000-0000-0000-0000-000000000000",
"codeEOP": "",
"material": "",
"sortament": "",
"image": "",
"electronicCatalog": false,
"service": false,
"sortamentGOST": "",
"consolidatedRecord": false,
"drawingDenotation": "",
"seriality": 0,
"obsolete": false,
"analyticsPurchasable": "00000000-0000-0000-0000-000000000000",
"referencePosition": "",
"ownershipSign": 0,
"unifiedClassifier": "00000000-0000-0000-0000-000000000000",
"codeUC": "",
"height": 0,
"width": 0,
"length": 0,
"dimensionsUnit": "00000000-0000-0000-0000-000000000000",
"dimensionsUnitCode": 0,
"weight": 0,
"weightUnit": "00000000-0000-0000-0000-000000000000",
"weightUnitCode": 0,
"groupCost": "00000000-0000-0000-0000-000000000000",
"oneTimePurchase": false,
"includedEOP": false,
"properties": [],
"alternativeUnit": [],
"analogue": [],
"spares": [],
"suppliers": [],
"occurrences": []
}
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/code"}
    instance: {"pointer":"/data/code"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/codeEOP"}
    instance: {"pointer":"/data/codeEOP"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/codeUC"}
    instance: {"pointer":"/data/codeUC"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/image"}
    instance: {"pointer":"/data/image"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/material"}
    instance: {"pointer":"/data/material"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/name"}
    instance: {"pointer":"/data/name"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/nameFull"}
    instance: {"pointer":"/data/nameFull"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 36)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/referencePosition"}
    instance: {"pointer":"/data/referencePosition"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 36
error: instance value (0) not found in enum (possible values: [1,2,3,5])
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/seriality"}
    instance: {"pointer":"/data/seriality"}
    domain: "validation"
    keyword: "enum"
    value: 0
    enum: [1,2,3,5]
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/sortament"}
    instance: {"pointer":"/data/sortament"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1
error: string "" is too short (length: 0, required minimum: 1)
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/Sasha/Api/target/test-classes/getChangeRequest.json#","pointer":"/properties/data/properties/sortamentGOST"}
    instance: {"pointer":"/data/sortamentGOST"}
    domain: "validation"
    keyword: "minLength"
    value: ""
    found: 0
    minLength: 1

  Actual: {
"guid": "31c9ca2a-b120-41f8-aa86-8cffb2627492",
"be": "",
"status": 5,
"code": "000000014",
"autor": {
"fio": "",
"email": ""
},
"responsible": {
"fio": "",
"email": ""
},
"date": "2023-07-25T15:22:04",
"periodExecution": "2023-07-25T15:28:04",
"comment": "",
"data": {
"guid": "00000000-0000-0000-0000-000000000000",
"code": "",
"name": "",
"comment": "",
"archive": false,
"dateOutputArchive": "0001-01-01T00:00:00",
"nameFull": "",
"namePurchasing": "",
"nameSale": "",
"baseUnit": "00000000-0000-0000-0000-000000000000",
"baseUnitCode": 0,
"materialGOST": "",
"tnved": "00000000-0000-0000-0000-000000000000",
"okved": "00000000-0000-0000-0000-000000000000",
"okpd2": "00000000-0000-0000-0000-000000000000",
"classifierEOP": "00000000-0000-0000-0000-000000000000",
"codeEOP": "",
"material": "",
"sortament": "",
"image": "",
"electronicCatalog": false,
"service": false,
"sortamentGOST": "",
"consolidatedRecord": false,
"drawingDenotation": "",
"seriality": 0,
"obsolete": false,
"analyticsPurchasable": "00000000-0000-0000-0000-000000000000",
"referencePosition": "",
"ownershipSign": 0,
"unifiedClassifier": "00000000-0000-0000-0000-000000000000",
"codeUC": "",
"height": 0,
"width": 0,
"length": 0,
"dimensionsUnit": "00000000-0000-0000-0000-000000000000",
"dimensionsUnitCode": 0,
"weight": 0,
"weightUnit": "00000000-0000-0000-0000-000000000000",
"weightUnitCode": 0,
"groupCost": "00000000-0000-0000-0000-000000000000",
"oneTimePurchase": false,
"includedEOP": false,
"properties": [],
"alternativeUnit": [],
"analogue": [],
"spares": [],
"suppliers": [],
"occurrences": []
}
}

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:107)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)
at AutoTest.ApplicationTest.getChangeRequestGuid(ApplicationTest.java:24)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChangeRequestGuid -->
        <test-method signature="getChangeRequestGuidNegative(java.lang.Object)[pri:0, instance:AutoTest.ApplicationTest@3b42121d]" started-at="2023-11-08T17:43:33 MSK" name="getChangeRequestGuidNegative" data-provider="guidNegative" finished-at="2023-11-08T17:43:34 MSK" duration-ms="899" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005026013b0c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChangeRequestGuidNegative -->
        <test-method signature="getChangeRequestGuidNegative(java.lang.Object)[pri:0, instance:AutoTest.ApplicationTest@3b42121d]" started-at="2023-11-08T17:43:34 MSK" name="getChangeRequestGuidNegative" data-provider="guidNegative" finished-at="2023-11-08T17:43:35 MSK" duration-ms="968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005056013b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChangeRequestGuidNegative -->
        <test-method signature="getChangeRequestGuidNegative(java.lang.Object)[pri:0, instance:AutoTest.ApplicationTest@3b42121d]" started-at="2023-11-08T17:43:35 MSK" name="getChangeRequestGuidNegative" data-provider="guidNegative" finished-at="2023-11-08T17:43:36 MSK" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[43dabce-3c42-11ee-b5b0-005096013b1c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChangeRequestGuidNegative -->
        <test-method signature="getChangeRequestGuidNegative(java.lang.Object)[pri:0, instance:AutoTest.ApplicationTest@3b42121d]" started-at="2023-11-08T17:43:36 MSK" name="getChangeRequestGuidNegative" data-provider="guidNegative" finished-at="2023-11-08T17:43:37 MSK" duration-ms="1014" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 13513a3e-36d6-11ee-b5b0-005056013b0c ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChangeRequestGuidNegative -->
        <test-method signature="getChangeRequestGuidNegative(java.lang.Object)[pri:0, instance:AutoTest.ApplicationTest@3b42121d]" started-at="2023-11-08T17:43:37 MSK" name="getChangeRequestGuidNegative" data-provider="guidNegative" finished-at="2023-11-08T17:43:38 MSK" duration-ms="938" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-3 6d6-11ee-b5 b0-005056013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChangeRequestGuidNegative -->
        <test-method signature="getChangeRequestGuidNegative(java.lang.Object)[pri:0, instance:AutoTest.ApplicationTest@3b42121d]" started-at="2023-11-08T17:43:38 MSK" name="getChangeRequestGuidNegative" data-provider="guidNegative" finished-at="2023-11-08T17:43:39 MSK" duration-ms="1047" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1кк13a3e-36d6-11ee-b5b0-00)&056 013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChangeRequestGuidNegative -->
        <test-method signature="getChangeRequestGuidNegative(java.lang.Object)[pri:0, instance:AutoTest.ApplicationTest@3b42121d]" started-at="2023-11-08T17:43:39 MSK" name="getChangeRequestGuidNegative" data-provider="guidNegative" finished-at="2023-11-08T17:43:40 MSK" duration-ms="968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChangeRequestGuidNegative -->
        <test-method signature="getChangeRequestGuidNegative(java.lang.Object)[pri:0, instance:AutoTest.ApplicationTest@3b42121d]" started-at="2023-11-08T17:43:40 MSK" name="getChangeRequestGuidNegative" data-provider="guidNegative" finished-at="2023-11-08T17:43:41 MSK" duration-ms="1009" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChangeRequestGuidNegative -->
        <test-method signature="getChangeRequestGuidNegative(java.lang.Object)[pri:0, instance:AutoTest.ApplicationTest@3b42121d]" started-at="2023-11-08T17:43:41 MSK" name="getChangeRequestGuidNegative" data-provider="guidNegative" finished-at="2023-11-08T17:43:42 MSK" duration-ms="1019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChangeRequestGuidNegative -->
        <test-method signature="getChangeRequestGuidNegative(java.lang.Object)[pri:0, instance:AutoTest.ApplicationTest@3b42121d]" started-at="2023-11-08T17:43:42 MSK" name="getChangeRequestGuidNegative" data-provider="guidNegative" finished-at="2023-11-08T17:43:43 MSK" duration-ms="1010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Q91MXkSBG2w4bDK9Z9nprYeT4Pd69TGUdDOqWKDrlSKkIZ3JHqi0rA1G5LAfCZ54yEJ3adXLSmgtm4Z5hXMNT3ZqxkqMyqQhE9fze353egOMYAf0tESKpQtqdOzmrqiyvTjC6tCVc6Iqxgyq3TkICV3Hhk7ffbIYkIYXqk6Inktqt9xKmNqCPsemWzKVaXCiQ299HurLBuVTvZeFWYrqnyjl46h1AKLjfkZOMb0vRari1MFJz48qkpFR6RLTTBS2EtLY1rAj7OIw6zACkXgsJkUkMShenn19tEeZKsl3nAwnt4Qk1P1nzHlnSw6Kdl1jvGflS6aLfxrRoqIM0W1TDlUfCfXehzCemTTui7BddecX6aUTcvYHj3eQSYb4tiErgIdN6PMpizjNO4iZjJLTdBh6xtQC9DQKCj1gM8QKUtDYP5sO1SlEcKcjPIC0Q3jQ4yY27NCuLwAiCqdqdiMVjGYsOd90xcdRBtX5tREE7ATqk21riVMXtAIHmBAGZ2jYQ6ZDO86ohend0RPlqMbjg1G3oliIwx5gNX1solpXlUnu1hmA1TgI3mB2qF1d7zgLw9yXykzScvCtOVsvqOAShLQ7GmR9cFJ7jfHN8APVBFMkXUKEVl6NkQhAQ4ApA7ehLXapgDI4JLuaNAWwlos9gEF2eS9VJ4j8F44fksKySH1IdSkcKR0fk9KX5pIxUQ7KWfWL6aALwY9hXvTtlHWBS62rAPT2VliYrbt9rCz8UVYGyxF9Dm43WvR6xrht8fFrOCVzhRvBreXHsyqwAE4Mzg7NMG48OXKLbo7ENp2bN7L1ppoLfF75wEDx5ecbTuFEg3YS4yDtKNdreHOei2bh1moaos3Zzum6WXZWHhrzFHtris4t8QZygCaNUTeaaONxRuFZtpz91ynjBF0gNFo5G0avIZHo0L5m5SYjXi41iVh8UOHAw2LxqpsVBaXDZ22nM2CWw1fmCgGsK1Jq6QDjEzul2GGZse3qwLxIokcqlVzKuGLrLJ2DDwhoWBovx2du]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChangeRequestGuidNegative -->
        <test-method signature="getTestChangeRequestGuid5()[pri:0, instance:AutoTest.ApplicationTest@3b42121d]" started-at="2023-11-08T17:43:43 MSK" name="getTestChangeRequestGuid5" finished-at="2023-11-08T17:43:44 MSK" duration-ms="976" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1705)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:172)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
at AutoTest.ApplicationTest.getTestChangeRequestGuid5(ApplicationTest.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestChangeRequestGuid5 -->
      </class> <!-- AutoTest.ApplicationTest -->
      <class name="AutoTest.ClassifierTest">
        <test-method signature="getEopGuid()[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:20 MSK" name="getEopGuid" finished-at="2023-11-08T17:44:21 MSK" duration-ms="1077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopGuid -->
        <test-method signature="getEopGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:21 MSK" name="getEopGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:22 MSK" duration-ms="961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005026013b0c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopGuidNegativeData -->
        <test-method signature="getEopGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:22 MSK" name="getEopGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:23 MSK" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005056013b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopGuidNegativeData -->
        <test-method signature="getEopGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:23 MSK" name="getEopGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:24 MSK" duration-ms="1034" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[43dabce-3c42-11ee-b5b0-005096013b1c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopGuidNegativeData -->
        <test-method signature="getEopGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:24 MSK" name="getEopGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:25 MSK" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 13513a3e-36d6-11ee-b5b0-005056013b0c ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopGuidNegativeData -->
        <test-method signature="getEopGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:25 MSK" name="getEopGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:26 MSK" duration-ms="988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-3 6d6-11ee-b5 b0-005056013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopGuidNegativeData -->
        <test-method signature="getEopGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:26 MSK" name="getEopGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:27 MSK" duration-ms="996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1кк13a3e-36d6-11ee-b5b0-00)&056 013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopGuidNegativeData -->
        <test-method signature="getEopGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:27 MSK" name="getEopGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:28 MSK" duration-ms="1029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopGuidNegativeData -->
        <test-method signature="getEopGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:28 MSK" name="getEopGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:29 MSK" duration-ms="1040" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopGuidNegativeData -->
        <test-method signature="getEopGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:29 MSK" name="getEopGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:30 MSK" duration-ms="927" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopGuidNegativeData -->
        <test-method signature="getEopGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:30 MSK" name="getEopGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:31 MSK" duration-ms="1047" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Q91MXkSBG2w4bDK9Z9nprYeT4Pd69TGUdDOqWKDrlSKkIZ3JHqi0rA1G5LAfCZ54yEJ3adXLSmgtm4Z5hXMNT3ZqxkqMyqQhE9fze353egOMYAf0tESKpQtqdOzmrqiyvTjC6tCVc6Iqxgyq3TkICV3Hhk7ffbIYkIYXqk6Inktqt9xKmNqCPsemWzKVaXCiQ299HurLBuVTvZeFWYrqnyjl46h1AKLjfkZOMb0vRari1MFJz48qkpFR6RLTTBS2EtLY1rAj7OIw6zACkXgsJkUkMShenn19tEeZKsl3nAwnt4Qk1P1nzHlnSw6Kdl1jvGflS6aLfxrRoqIM0W1TDlUfCfXehzCemTTui7BddecX6aUTcvYHj3eQSYb4tiErgIdN6PMpizjNO4iZjJLTdBh6xtQC9DQKCj1gM8QKUtDYP5sO1SlEcKcjPIC0Q3jQ4yY27NCuLwAiCqdqdiMVjGYsOd90xcdRBtX5tREE7ATqk21riVMXtAIHmBAGZ2jYQ6ZDO86ohend0RPlqMbjg1G3oliIwx5gNX1solpXlUnu1hmA1TgI3mB2qF1d7zgLw9yXykzScvCtOVsvqOAShLQ7GmR9cFJ7jfHN8APVBFMkXUKEVl6NkQhAQ4ApA7ehLXapgDI4JLuaNAWwlos9gEF2eS9VJ4j8F44fksKySH1IdSkcKR0fk9KX5pIxUQ7KWfWL6aALwY9hXvTtlHWBS62rAPT2VliYrbt9rCz8UVYGyxF9Dm43WvR6xrht8fFrOCVzhRvBreXHsyqwAE4Mzg7NMG48OXKLbo7ENp2bN7L1ppoLfF75wEDx5ecbTuFEg3YS4yDtKNdreHOei2bh1moaos3Zzum6WXZWHhrzFHtris4t8QZygCaNUTeaaONxRuFZtpz91ynjBF0gNFo5G0avIZHo0L5m5SYjXi41iVh8UOHAw2LxqpsVBaXDZ22nM2CWw1fmCgGsK1Jq6QDjEzul2GGZse3qwLxIokcqlVzKuGLrLJ2DDwhoWBovx2du]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopGuidNegativeData -->
        <test-method signature="getEopList(int)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:31 MSK" name="getEopList" data-provider="positiveData" finished-at="2023-11-08T17:44:32 MSK" duration-ms="996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopList -->
        <test-method signature="getEopList(int)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:32 MSK" name="getEopList" data-provider="positiveData" finished-at="2023-11-08T17:44:33 MSK" duration-ms="1022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopList -->
        <test-method signature="getEopList(int)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:33 MSK" name="getEopList" data-provider="positiveData" finished-at="2023-11-08T17:44:34 MSK" duration-ms="959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopList -->
        <test-method signature="getEopList(int)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:34 MSK" name="getEopList" data-provider="positiveData" finished-at="2023-11-08T17:44:35 MSK" duration-ms="1519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopList -->
        <test-method signature="getEopList(int)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:35 MSK" name="getEopList" data-provider="positiveData" finished-at="2023-11-08T17:44:36 MSK" duration-ms="1072" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[199]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopList -->
        <test-method signature="getEopList(int)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:36 MSK" name="getEopList" data-provider="positiveData" finished-at="2023-11-08T17:44:37 MSK" duration-ms="783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopList -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:37 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:38 MSK" duration-ms="638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:38 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:39 MSK" duration-ms="985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:39 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:40 MSK" duration-ms="1176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[   ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:40 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:41 MSK" duration-ms="820" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 200 ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:41 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:42 MSK" duration-ms="1006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:42 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:43 MSK" duration-ms="1077" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:43 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:44 MSK" duration-ms="930" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:44 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:45 MSK" duration-ms="1027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent lupta]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:45 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:46 MSK" duration-ms="963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123DWQ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:46 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:47 MSK" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*(){}[]"':;/<>\|№
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:47 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:48 MSK" duration-ms="1012" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[select*From users]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:48 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:49 MSK" duration-ms="1020" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:49 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:50 MSK" duration-ms="959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[<script>alert( 'Hello world' );</script>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:50 MSK" name="getEopListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:44:51 MSK" duration-ms="996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListNegativeStep -->
        <test-method signature="getEopListStepIsEmpty()[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:51 MSK" name="getEopListStepIsEmpty" finished-at="2023-11-08T17:44:52 MSK" duration-ms="1229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEopListStepIsEmpty -->
        <test-method signature="getUnifiedClassifierGuid()[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:52 MSK" name="getUnifiedClassifierGuid" finished-at="2023-11-08T17:44:53 MSK" duration-ms="782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierGuid -->
        <test-method signature="getUnifiedClassifierGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:53 MSK" name="getUnifiedClassifierGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:54 MSK" duration-ms="988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005026013b0c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierGuidNegativeData -->
        <test-method signature="getUnifiedClassifierGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:54 MSK" name="getUnifiedClassifierGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:55 MSK" duration-ms="969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005056013b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierGuidNegativeData -->
        <test-method signature="getUnifiedClassifierGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:55 MSK" name="getUnifiedClassifierGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:56 MSK" duration-ms="1011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[43dabce-3c42-11ee-b5b0-005096013b1c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierGuidNegativeData -->
        <test-method signature="getUnifiedClassifierGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:56 MSK" name="getUnifiedClassifierGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:57 MSK" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 13513a3e-36d6-11ee-b5b0-005056013b0c ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierGuidNegativeData -->
        <test-method signature="getUnifiedClassifierGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:57 MSK" name="getUnifiedClassifierGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:58 MSK" duration-ms="1067" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-3 6d6-11ee-b5 b0-005056013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierGuidNegativeData -->
        <test-method signature="getUnifiedClassifierGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:58 MSK" name="getUnifiedClassifierGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:44:59 MSK" duration-ms="1107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1кк13a3e-36d6-11ee-b5b0-00)&056 013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierGuidNegativeData -->
        <test-method signature="getUnifiedClassifierGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:44:59 MSK" name="getUnifiedClassifierGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:00 MSK" duration-ms="963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierGuidNegativeData -->
        <test-method signature="getUnifiedClassifierGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:00 MSK" name="getUnifiedClassifierGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:02 MSK" duration-ms="2205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierGuidNegativeData -->
        <test-method signature="getUnifiedClassifierGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:02 MSK" name="getUnifiedClassifierGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:04 MSK" duration-ms="1999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierGuidNegativeData -->
        <test-method signature="getUnifiedClassifierGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:04 MSK" name="getUnifiedClassifierGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:05 MSK" duration-ms="907" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Q91MXkSBG2w4bDK9Z9nprYeT4Pd69TGUdDOqWKDrlSKkIZ3JHqi0rA1G5LAfCZ54yEJ3adXLSmgtm4Z5hXMNT3ZqxkqMyqQhE9fze353egOMYAf0tESKpQtqdOzmrqiyvTjC6tCVc6Iqxgyq3TkICV3Hhk7ffbIYkIYXqk6Inktqt9xKmNqCPsemWzKVaXCiQ299HurLBuVTvZeFWYrqnyjl46h1AKLjfkZOMb0vRari1MFJz48qkpFR6RLTTBS2EtLY1rAj7OIw6zACkXgsJkUkMShenn19tEeZKsl3nAwnt4Qk1P1nzHlnSw6Kdl1jvGflS6aLfxrRoqIM0W1TDlUfCfXehzCemTTui7BddecX6aUTcvYHj3eQSYb4tiErgIdN6PMpizjNO4iZjJLTdBh6xtQC9DQKCj1gM8QKUtDYP5sO1SlEcKcjPIC0Q3jQ4yY27NCuLwAiCqdqdiMVjGYsOd90xcdRBtX5tREE7ATqk21riVMXtAIHmBAGZ2jYQ6ZDO86ohend0RPlqMbjg1G3oliIwx5gNX1solpXlUnu1hmA1TgI3mB2qF1d7zgLw9yXykzScvCtOVsvqOAShLQ7GmR9cFJ7jfHN8APVBFMkXUKEVl6NkQhAQ4ApA7ehLXapgDI4JLuaNAWwlos9gEF2eS9VJ4j8F44fksKySH1IdSkcKR0fk9KX5pIxUQ7KWfWL6aALwY9hXvTtlHWBS62rAPT2VliYrbt9rCz8UVYGyxF9Dm43WvR6xrht8fFrOCVzhRvBreXHsyqwAE4Mzg7NMG48OXKLbo7ENp2bN7L1ppoLfF75wEDx5ecbTuFEg3YS4yDtKNdreHOei2bh1moaos3Zzum6WXZWHhrzFHtris4t8QZygCaNUTeaaONxRuFZtpz91ynjBF0gNFo5G0avIZHo0L5m5SYjXi41iVh8UOHAw2LxqpsVBaXDZ22nM2CWw1fmCgGsK1Jq6QDjEzul2GGZse3qwLxIokcqlVzKuGLrLJ2DDwhoWBovx2du]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierGuidNegativeData -->
        <test-method signature="getUnifiedClassifierList()[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:05 MSK" name="getUnifiedClassifierList" finished-at="2023-11-08T17:45:07 MSK" duration-ms="1775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierList -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:07 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:08 MSK" duration-ms="1041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:08 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:09 MSK" duration-ms="935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:09 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:10 MSK" duration-ms="1030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[   ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:10 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:11 MSK" duration-ms="986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 200 ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:11 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:12 MSK" duration-ms="1014" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:12 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:13 MSK" duration-ms="960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:13 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:14 MSK" duration-ms="1036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:14 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:15 MSK" duration-ms="1007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent lupta]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:15 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:16 MSK" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123DWQ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:16 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:17 MSK" duration-ms="985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*(){}[]"':;/<>\|№
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:17 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:18 MSK" duration-ms="1017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[select*From users]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:18 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:19 MSK" duration-ms="987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:19 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:20 MSK" duration-ms="998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[<script>alert( 'Hello world' );</script>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:20 MSK" name="getUnifiedClassifierListNegativeData" data-provider="negativeData" finished-at="2023-11-08T17:45:21 MSK" duration-ms="997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListNegativeData -->
        <test-method signature="getUnifiedClassifierListPositiveStep(int)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:21 MSK" name="getUnifiedClassifierListPositiveStep" data-provider="positiveData" finished-at="2023-11-08T17:45:22 MSK" duration-ms="1010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListPositiveStep -->
        <test-method signature="getUnifiedClassifierListPositiveStep(int)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:22 MSK" name="getUnifiedClassifierListPositiveStep" data-provider="positiveData" finished-at="2023-11-08T17:45:23 MSK" duration-ms="1041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListPositiveStep -->
        <test-method signature="getUnifiedClassifierListPositiveStep(int)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:23 MSK" name="getUnifiedClassifierListPositiveStep" data-provider="positiveData" finished-at="2023-11-08T17:45:24 MSK" duration-ms="1125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListPositiveStep -->
        <test-method signature="getUnifiedClassifierListPositiveStep(int)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:24 MSK" name="getUnifiedClassifierListPositiveStep" data-provider="positiveData" finished-at="2023-11-08T17:45:25 MSK" duration-ms="1103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListPositiveStep -->
        <test-method signature="getUnifiedClassifierListPositiveStep(int)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:25 MSK" name="getUnifiedClassifierListPositiveStep" data-provider="positiveData" finished-at="2023-11-08T17:45:26 MSK" duration-ms="1140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[199]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListPositiveStep -->
        <test-method signature="getUnifiedClassifierListPositiveStep(int)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:26 MSK" name="getUnifiedClassifierListPositiveStep" data-provider="positiveData" finished-at="2023-11-08T17:45:28 MSK" duration-ms="1371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListPositiveStep -->
        <test-method signature="getUnifiedClassifierListStepIsEmpty()[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:28 MSK" name="getUnifiedClassifierListStepIsEmpty" finished-at="2023-11-08T17:45:28 MSK" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnifiedClassifierListStepIsEmpty -->
        <test-method signature="getUnitsGuid()[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:28 MSK" name="getUnitsGuid" finished-at="2023-11-08T17:45:29 MSK" duration-ms="707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsGuid -->
        <test-method signature="getUnitsGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:29 MSK" name="getUnitsGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:30 MSK" duration-ms="1062" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005026013b0c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsGuidNegativeData -->
        <test-method signature="getUnitsGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:30 MSK" name="getUnitsGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:31 MSK" duration-ms="924" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005056013b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsGuidNegativeData -->
        <test-method signature="getUnitsGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:31 MSK" name="getUnitsGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:32 MSK" duration-ms="1030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[43dabce-3c42-11ee-b5b0-005096013b1c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsGuidNegativeData -->
        <test-method signature="getUnitsGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:32 MSK" name="getUnitsGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:33 MSK" duration-ms="1107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 13513a3e-36d6-11ee-b5b0-005056013b0c ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsGuidNegativeData -->
        <test-method signature="getUnitsGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:33 MSK" name="getUnitsGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:34 MSK" duration-ms="846" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-3 6d6-11ee-b5 b0-005056013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsGuidNegativeData -->
        <test-method signature="getUnitsGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:34 MSK" name="getUnitsGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:35 MSK" duration-ms="1003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1кк13a3e-36d6-11ee-b5b0-00)&056 013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsGuidNegativeData -->
        <test-method signature="getUnitsGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:35 MSK" name="getUnitsGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:36 MSK" duration-ms="990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsGuidNegativeData -->
        <test-method signature="getUnitsGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:36 MSK" name="getUnitsGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:37 MSK" duration-ms="1009" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsGuidNegativeData -->
        <test-method signature="getUnitsGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:37 MSK" name="getUnitsGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:38 MSK" duration-ms="987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsGuidNegativeData -->
        <test-method signature="getUnitsGuidNegativeData(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:38 MSK" name="getUnitsGuidNegativeData" data-provider="guidNegative" finished-at="2023-11-08T17:45:39 MSK" duration-ms="1017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Q91MXkSBG2w4bDK9Z9nprYeT4Pd69TGUdDOqWKDrlSKkIZ3JHqi0rA1G5LAfCZ54yEJ3adXLSmgtm4Z5hXMNT3ZqxkqMyqQhE9fze353egOMYAf0tESKpQtqdOzmrqiyvTjC6tCVc6Iqxgyq3TkICV3Hhk7ffbIYkIYXqk6Inktqt9xKmNqCPsemWzKVaXCiQ299HurLBuVTvZeFWYrqnyjl46h1AKLjfkZOMb0vRari1MFJz48qkpFR6RLTTBS2EtLY1rAj7OIw6zACkXgsJkUkMShenn19tEeZKsl3nAwnt4Qk1P1nzHlnSw6Kdl1jvGflS6aLfxrRoqIM0W1TDlUfCfXehzCemTTui7BddecX6aUTcvYHj3eQSYb4tiErgIdN6PMpizjNO4iZjJLTdBh6xtQC9DQKCj1gM8QKUtDYP5sO1SlEcKcjPIC0Q3jQ4yY27NCuLwAiCqdqdiMVjGYsOd90xcdRBtX5tREE7ATqk21riVMXtAIHmBAGZ2jYQ6ZDO86ohend0RPlqMbjg1G3oliIwx5gNX1solpXlUnu1hmA1TgI3mB2qF1d7zgLw9yXykzScvCtOVsvqOAShLQ7GmR9cFJ7jfHN8APVBFMkXUKEVl6NkQhAQ4ApA7ehLXapgDI4JLuaNAWwlos9gEF2eS9VJ4j8F44fksKySH1IdSkcKR0fk9KX5pIxUQ7KWfWL6aALwY9hXvTtlHWBS62rAPT2VliYrbt9rCz8UVYGyxF9Dm43WvR6xrht8fFrOCVzhRvBreXHsyqwAE4Mzg7NMG48OXKLbo7ENp2bN7L1ppoLfF75wEDx5ecbTuFEg3YS4yDtKNdreHOei2bh1moaos3Zzum6WXZWHhrzFHtris4t8QZygCaNUTeaaONxRuFZtpz91ynjBF0gNFo5G0avIZHo0L5m5SYjXi41iVh8UOHAw2LxqpsVBaXDZ22nM2CWw1fmCgGsK1Jq6QDjEzul2GGZse3qwLxIokcqlVzKuGLrLJ2DDwhoWBovx2du]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsGuidNegativeData -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:39 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:40 MSK" duration-ms="979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:40 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:41 MSK" duration-ms="1042" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:41 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:42 MSK" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[   ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:42 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:43 MSK" duration-ms="1044" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 200 ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:43 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:44 MSK" duration-ms="949" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:44 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:45 MSK" duration-ms="1000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:45 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:46 MSK" duration-ms="1149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:46 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:47 MSK" duration-ms="862" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent lupta]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:47 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:48 MSK" duration-ms="1001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123DWQ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:48 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:49 MSK" duration-ms="1138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*(){}[]"':;/<>\|№
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:49 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:50 MSK" duration-ms="850" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[select*From users]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:50 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:51 MSK" duration-ms="1017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:51 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:52 MSK" duration-ms="1111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[<script>alert( 'Hello world' );</script>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListNegativeStep(java.lang.Object)[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:52 MSK" name="getUnitsListNegativeStep" data-provider="negativeData" finished-at="2023-11-08T17:45:53 MSK" duration-ms="854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListNegativeStep -->
        <test-method signature="getUnitsListStepEqual100()[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:53 MSK" name="getUnitsListStepEqual100" finished-at="2023-11-08T17:45:54 MSK" duration-ms="1114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListStepEqual100 -->
        <test-method signature="getUnitsListStepEqual199()[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:54 MSK" name="getUnitsListStepEqual199" finished-at="2023-11-08T17:45:55 MSK" duration-ms="979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListStepEqual199 -->
        <test-method signature="getUnitsListStepIsEmpty()[pri:0, instance:AutoTest.ClassifierTest@733ec58b]" started-at="2023-11-08T17:45:55 MSK" name="getUnitsListStepIsEmpty" finished-at="2023-11-08T17:45:56 MSK" duration-ms="981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnitsListStepIsEmpty -->
      </class> <!-- AutoTest.ClassifierTest -->
      <class name="AutoTest.NomenclatureTest">
        <test-method signature="getBasicServicesGuid()[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:47:33 MSK" name="getBasicServicesGuid" finished-at="2023-11-08T17:47:34 MSK" duration-ms="1056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBasicServicesGuid -->
        <test-method signature="getBasicServicesGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:47:34 MSK" name="getBasicServicesGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:47:35 MSK" duration-ms="943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005026013b0c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBasicServicesGuidDataProvider -->
        <test-method signature="getBasicServicesGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:47:35 MSK" name="getBasicServicesGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:47:36 MSK" duration-ms="1302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005056013b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBasicServicesGuidDataProvider -->
        <test-method signature="getBasicServicesGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:47:36 MSK" name="getBasicServicesGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:21 MSK" duration-ms="44416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[43dabce-3c42-11ee-b5b0-005096013b1c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBasicServicesGuidDataProvider -->
        <test-method signature="getBasicServicesGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:21 MSK" name="getBasicServicesGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:22 MSK" duration-ms="1285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 13513a3e-36d6-11ee-b5b0-005056013b0c ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBasicServicesGuidDataProvider -->
        <test-method signature="getBasicServicesGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:22 MSK" name="getBasicServicesGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:23 MSK" duration-ms="1013" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-3 6d6-11ee-b5 b0-005056013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBasicServicesGuidDataProvider -->
        <test-method signature="getBasicServicesGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:23 MSK" name="getBasicServicesGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:24 MSK" duration-ms="1008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1кк13a3e-36d6-11ee-b5b0-00)&056 013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBasicServicesGuidDataProvider -->
        <test-method signature="getBasicServicesGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:24 MSK" name="getBasicServicesGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:25 MSK" duration-ms="972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBasicServicesGuidDataProvider -->
        <test-method signature="getBasicServicesGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:25 MSK" name="getBasicServicesGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:26 MSK" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBasicServicesGuidDataProvider -->
        <test-method signature="getBasicServicesGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:26 MSK" name="getBasicServicesGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:27 MSK" duration-ms="1258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBasicServicesGuidDataProvider -->
        <test-method signature="getBasicServicesGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:27 MSK" name="getBasicServicesGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:31 MSK" duration-ms="3513" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Q91MXkSBG2w4bDK9Z9nprYeT4Pd69TGUdDOqWKDrlSKkIZ3JHqi0rA1G5LAfCZ54yEJ3adXLSmgtm4Z5hXMNT3ZqxkqMyqQhE9fze353egOMYAf0tESKpQtqdOzmrqiyvTjC6tCVc6Iqxgyq3TkICV3Hhk7ffbIYkIYXqk6Inktqt9xKmNqCPsemWzKVaXCiQ299HurLBuVTvZeFWYrqnyjl46h1AKLjfkZOMb0vRari1MFJz48qkpFR6RLTTBS2EtLY1rAj7OIw6zACkXgsJkUkMShenn19tEeZKsl3nAwnt4Qk1P1nzHlnSw6Kdl1jvGflS6aLfxrRoqIM0W1TDlUfCfXehzCemTTui7BddecX6aUTcvYHj3eQSYb4tiErgIdN6PMpizjNO4iZjJLTdBh6xtQC9DQKCj1gM8QKUtDYP5sO1SlEcKcjPIC0Q3jQ4yY27NCuLwAiCqdqdiMVjGYsOd90xcdRBtX5tREE7ATqk21riVMXtAIHmBAGZ2jYQ6ZDO86ohend0RPlqMbjg1G3oliIwx5gNX1solpXlUnu1hmA1TgI3mB2qF1d7zgLw9yXykzScvCtOVsvqOAShLQ7GmR9cFJ7jfHN8APVBFMkXUKEVl6NkQhAQ4ApA7ehLXapgDI4JLuaNAWwlos9gEF2eS9VJ4j8F44fksKySH1IdSkcKR0fk9KX5pIxUQ7KWfWL6aALwY9hXvTtlHWBS62rAPT2VliYrbt9rCz8UVYGyxF9Dm43WvR6xrht8fFrOCVzhRvBreXHsyqwAE4Mzg7NMG48OXKLbo7ENp2bN7L1ppoLfF75wEDx5ecbTuFEg3YS4yDtKNdreHOei2bh1moaos3Zzum6WXZWHhrzFHtris4t8QZygCaNUTeaaONxRuFZtpz91ynjBF0gNFo5G0avIZHo0L5m5SYjXi41iVh8UOHAw2LxqpsVBaXDZ22nM2CWw1fmCgGsK1Jq6QDjEzul2GGZse3qwLxIokcqlVzKuGLrLJ2DDwhoWBovx2du]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBasicServicesGuidDataProvider -->
        <test-method signature="getNomenclatureGuid()[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:31 MSK" name="getNomenclatureGuid" finished-at="2023-11-08T17:48:33 MSK" duration-ms="2053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureGuid -->
        <test-method signature="getNomenclatureGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:33 MSK" name="getNomenclatureGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:34 MSK" duration-ms="1430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005026013b0c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureGuidDataProvider -->
        <test-method signature="getNomenclatureGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:34 MSK" name="getNomenclatureGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:36 MSK" duration-ms="1912" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-36d6-11ee-b5b0-005056013b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureGuidDataProvider -->
        <test-method signature="getNomenclatureGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:36 MSK" name="getNomenclatureGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:37 MSK" duration-ms="912" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[43dabce-3c42-11ee-b5b0-005096013b1c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureGuidDataProvider -->
        <test-method signature="getNomenclatureGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:37 MSK" name="getNomenclatureGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:38 MSK" duration-ms="1041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 13513a3e-36d6-11ee-b5b0-005056013b0c ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureGuidDataProvider -->
        <test-method signature="getNomenclatureGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:38 MSK" name="getNomenclatureGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:39 MSK" duration-ms="1323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[13513a3e-3 6d6-11ee-b5 b0-005056013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureGuidDataProvider -->
        <test-method signature="getNomenclatureGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:39 MSK" name="getNomenclatureGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:41 MSK" duration-ms="1774" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1кк13a3e-36d6-11ee-b5b0-00)&056 013b0c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureGuidDataProvider -->
        <test-method signature="getNomenclatureGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:41 MSK" name="getNomenclatureGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:42 MSK" duration-ms="881" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureGuidDataProvider -->
        <test-method signature="getNomenclatureGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:42 MSK" name="getNomenclatureGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:43 MSK" duration-ms="1272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureGuidDataProvider -->
        <test-method signature="getNomenclatureGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:43 MSK" name="getNomenclatureGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:44 MSK" duration-ms="948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureGuidDataProvider -->
        <test-method signature="getNomenclatureGuidDataProvider(java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:44 MSK" name="getNomenclatureGuidDataProvider" data-provider="guidNegative" finished-at="2023-11-08T17:48:49 MSK" duration-ms="5224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Q91MXkSBG2w4bDK9Z9nprYeT4Pd69TGUdDOqWKDrlSKkIZ3JHqi0rA1G5LAfCZ54yEJ3adXLSmgtm4Z5hXMNT3ZqxkqMyqQhE9fze353egOMYAf0tESKpQtqdOzmrqiyvTjC6tCVc6Iqxgyq3TkICV3Hhk7ffbIYkIYXqk6Inktqt9xKmNqCPsemWzKVaXCiQ299HurLBuVTvZeFWYrqnyjl46h1AKLjfkZOMb0vRari1MFJz48qkpFR6RLTTBS2EtLY1rAj7OIw6zACkXgsJkUkMShenn19tEeZKsl3nAwnt4Qk1P1nzHlnSw6Kdl1jvGflS6aLfxrRoqIM0W1TDlUfCfXehzCemTTui7BddecX6aUTcvYHj3eQSYb4tiErgIdN6PMpizjNO4iZjJLTdBh6xtQC9DQKCj1gM8QKUtDYP5sO1SlEcKcjPIC0Q3jQ4yY27NCuLwAiCqdqdiMVjGYsOd90xcdRBtX5tREE7ATqk21riVMXtAIHmBAGZ2jYQ6ZDO86ohend0RPlqMbjg1G3oliIwx5gNX1solpXlUnu1hmA1TgI3mB2qF1d7zgLw9yXykzScvCtOVsvqOAShLQ7GmR9cFJ7jfHN8APVBFMkXUKEVl6NkQhAQ4ApA7ehLXapgDI4JLuaNAWwlos9gEF2eS9VJ4j8F44fksKySH1IdSkcKR0fk9KX5pIxUQ7KWfWL6aALwY9hXvTtlHWBS62rAPT2VliYrbt9rCz8UVYGyxF9Dm43WvR6xrht8fFrOCVzhRvBreXHsyqwAE4Mzg7NMG48OXKLbo7ENp2bN7L1ppoLfF75wEDx5ecbTuFEg3YS4yDtKNdreHOei2bh1moaos3Zzum6WXZWHhrzFHtris4t8QZygCaNUTeaaONxRuFZtpz91ynjBF0gNFo5G0avIZHo0L5m5SYjXi41iVh8UOHAw2LxqpsVBaXDZ22nM2CWw1fmCgGsK1Jq6QDjEzul2GGZse3qwLxIokcqlVzKuGLrLJ2DDwhoWBovx2du]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureGuidDataProvider -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:49 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:48:57 MSK" duration-ms="7687" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bolt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:48:57 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:00 MSK" duration-ms="3194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bolt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:00 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:06 MSK" duration-ms="5257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bolt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:06 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:11 MSK" duration-ms="5382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4d0e1f7b-5149-11ee-b5b0-005056013b0c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:11 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:12 MSK" duration-ms="1231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bolt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:12 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:13 MSK" duration-ms="1178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bolt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:13 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:14 MSK" duration-ms="832" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path size() doesn't match.
Expected: is <0>
  Actual: <5>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path size() doesn't match.
Expected: is <0>
  Actual: <5>

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
at io.restassured.specification.ResponseSpecification$body$2.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at AutoTest.NomenclatureTest.getNomenclatureSearchBodyIsEmpty(NomenclatureTest.java:194)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:14 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:15 MSK" duration-ms="1062" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[<script>alert( 'Hello world' );</script>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:15 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:17 MSK" duration-ms="1851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[select*From users]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:17 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:18 MSK" duration-ms="1206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:18 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:22 MSK" duration-ms="3774" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path size() doesn't match.
Expected: is <0>
  Actual: <5>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path size() doesn't match.
Expected: is <0>
  Actual: <5>

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
at io.restassured.specification.ResponseSpecification$body$2.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at AutoTest.NomenclatureTest.getNomenclatureSearchBodyIsEmpty(NomenclatureTest.java:194)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:22 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:23 MSK" duration-ms="838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:23 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:24 MSK" duration-ms="1015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[iiiiiiiiiiiiiiiiiiiiiiii]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:24 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:25 MSK" duration-ms="994" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[йййййййййййййййййййййййй]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchBodyIsEmpty(int,int,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:25 MSK" name="getNomenclatureSearchBodyIsEmpty" data-provider="nomenclatureSearchEmptyBody" finished-at="2023-11-08T17:49:26 MSK" duration-ms="986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchBodyIsEmpty -->
        <test-method signature="getNomenclatureSearchDataProvider(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:26 MSK" name="getNomenclatureSearchDataProvider" data-provider="test" finished-at="2023-11-08T17:49:27 MSK" duration-ms="1104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchDataProvider -->
        <test-method signature="getNomenclatureSearchDataProvider(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:27 MSK" name="getNomenclatureSearchDataProvider" data-provider="test" finished-at="2023-11-08T17:49:28 MSK" duration-ms="915" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchDataProvider -->
        <test-method signature="getNomenclatureSearchDataProvider(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:28 MSK" name="getNomenclatureSearchDataProvider" data-provider="test" finished-at="2023-11-08T17:49:30 MSK" duration-ms="1875" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01сб]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchDataProvider -->
        <test-method signature="getNomenclatureSearchDataProvider(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:30 MSK" name="getNomenclatureSearchDataProvider" data-provider="test" finished-at="2023-11-08T17:49:31 MSK" duration-ms="1240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[00]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchDataProvider -->
        <test-method signature="getNomenclatureSearchDataProvider(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:31 MSK" name="getNomenclatureSearchDataProvider" data-provider="test" finished-at="2023-11-08T17:49:34 MSK" duration-ms="2652" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[176]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchDataProvider -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:34 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:35 MSK" duration-ms="1173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:35 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:36 MSK" duration-ms="994" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:36 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:37 MSK" duration-ms="1023" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01сб]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:37 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:38 MSK" duration-ms="1163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01сб]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:38 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:39 MSK" duration-ms="843" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["select*from users"]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[00]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:39 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:40 MSK" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[00]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:40 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:41 MSK" duration-ms="1050" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ 9 ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:41 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:42 MSK" duration-ms="974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sыgf123&* ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[00]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:42 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:43 MSK" duration-ms="1078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:43 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:44 MSK" duration-ms="1058" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:44 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:45 MSK" duration-ms="864" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:45 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:46 MSK" duration-ms="980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:46 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:47 MSK" duration-ms="1080" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:47 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:48 MSK" duration-ms="1086" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:48 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:49 MSK" duration-ms="912" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:49 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:50 MSK" duration-ms="1027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:50 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:51 MSK" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[201]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:51 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:52 MSK" duration-ms="923" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[201.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Болт]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:52 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:53 MSK" duration-ms="975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01сб]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:53 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:54 MSK" duration-ms="1074" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[00]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchNegative(java.lang.Object,java.lang.Object,java.lang.Object)[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:54 MSK" name="getNomenclatureSearchNegative" data-provider="testNegative" finished-at="2023-11-08T17:49:55 MSK" duration-ms="964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[00]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchNegative -->
        <test-method signature="getNomenclatureSearchType1()[pri:0, instance:AutoTest.NomenclatureTest@415ef4d8]" started-at="2023-11-08T17:49:55 MSK" name="getNomenclatureSearchType1" finished-at="2023-11-08T17:49:58 MSK" duration-ms="2930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNomenclatureSearchType1 -->
      </class> <!-- AutoTest.NomenclatureTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
